<?xml version="1.0" encoding="UTF-8"?>
<!--view context -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <!-- Configures the @Controller programming model -->

    <mvc:annotation-driven />

    <context:annotation-config/>


    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd
     如果用了spring -security 時，不要在此配置  command V20130503
        <mvc:resources mapping="/img/**" location="/img/"/>
         <mvc:resources mapping="/js/**" location="/js/"/>
         <mvc:resources mapping="/css/**" location="/css/"/>
         <mvc:resources mapping="/html/**" location="/html/"/>
    -->


    <!--    <import resource="./spring-httpconverter.xml" />-->
    <!--	<import resource="./spring-locale.xml" />-->

    <!-- 让Spring通过自动扫描来查询和管理Bean for @Components -->
    <!--	<context:component-scan base-package="org.batchcard">-->
    <!--		<context:exclude-filter type="annotation"-->
    <!--			expression="org.springframework.stereotype.Controller" />-->
    <!--	</context:component-scan>-->


    <!--	 Configures the @Controller programming model 只能放在application里-->
    <!--	<mvc:annotation-driven />-->

    <!-- Forwards requests to the "/" resource to the "welcome" view -->
    <!--	<mvc:view-controller path="/" view-name="welcome" />-->

    <!--
        ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，
        配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射
        用 annotation-driven 代換
        -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">

        <description>
            配置一下对json数据的转换
        </description>


        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">

                    <property name="objectMapper">
                        <bean class=" com.redsun.platf.web.controller.converter.EPJsonObjectMapper"/>
                    </property>

                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg value="application"/>
                                <constructor-arg value="xml"/>
                            </bean>
                        </list>
                    </property>
                </bean>
                <!--<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">-->
                <!--</bean>-->
                <!--<bean class="org.springframework.http.converter.FormHttpMessageConverter">-->
                <!--</bean>-->
            </list>

        </property>


        <property name="cacheSeconds" value="0"/>

    </bean>

    <!--
        ②： defaultViews:启动Spring MVC的注解功能，完成请求和注解POJO的映射，
                配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射
    -->

    <bean
            class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <description>
            根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml
            ignoreAcceptHeader :
            设置为true以忽略对Accept Header的支持
            defaultContentType:
            在没有扩展名时即: "/user/1" 时的默认展现形式
            mediaTypes:
            扩展名至mimeType的映射,即 /user.json => application/json
            favorParameter:
            设置为true以开启 /userinfo/123?format=json 的支持
            <!-- Error !!!!
                               <property name="viewResolvers">
                                   <list>
                                       <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                                       <bean id="internalResourceViewResolver"
                                           class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                                           <property name="viewClass"
                                               value="org.springframework.web.servlet.view.JstlView" />
                                           <property name="prefix" value="/WEB-INF/jsp/" />
                                           <property name="suffix" value=".jsp" />
                                       </bean>
                                   </list>
                               </property>

                               -->


        </description>

        <property name="ignoreAcceptHeader" value="false"/>

        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="application/x-www-form-urlencoded"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <!--<entry key="html" value="text/html;charset=UTF-8"/>-->
                <entry key="xls" value="application/vnd.ms-excel"/>
                <entry key="pdf" value="application/pdf"/>

            </map>
        </property>

        <property name="favorParameter" value="true"/>

        <property name="defaultViews">
            <list>
                <bean
                        class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="marshaller">
                        <bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
                            <property name="autodetectAnnotations" value="true"/>
                        </bean>
                    </property>
                    <property name="contentType" value="application/xml"/>
                </bean>


            </list>
        </property>

    </bean>


    <!-- 配置freeMarker视图解析器 id="viewResolverFtl"-->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <description>
            exposeSpringMacroHelpers =true : To take advantage of spring.ftl macros

        </description>
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>-->

        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="cache" value="true"/>
        <!--<property name="prefix" value="/" />-->
        <property name="suffix" value=".ftl"/>
        <property name="order" value="0"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposePathVariables" value="true"/>
        <!--<property name="exposeRequestAttributes" value="true"/>-->
        <!--<property name="exposeSessionAttributes" value="true"/>-->

    </bean>


    <!-- 配置freeMarker的模板路径 index =0-->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath">
            <value>/WEB-INF/freemarker/</value>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="defaultEncoding">
            <value>utf-8</value>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">3600</prop>
            </props>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>


    <!--通用视图解析器 index=1 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
        <!--<property name="viewClass">-->
        <!--<value>org.springframework.web.servlet.view.InternalResourceView</value>-->
        <!--</property>-->

        <property name="order" value="1"/>

    </bean>


    <!--異常處理解析器
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <description>
            定義兩個異常處理畫面
        </description>
        <property name="defaultErrorView" value="error.jsp"/>
        <property name="exceptionMappings">
            <props>
                <prop key="java.sql.SQLException">errorDB</prop>
                <prop key="java.lang.RuntimeException">errorRPT</prop>
            </props>
        </property>
    </bean>
    -->



</beans>
